// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.20.3
// source: backtest.proto

package backtest

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BacktestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          int64                  `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`                 // 统计天数
	TopN          int64                  `protobuf:"varint,2,opt,name=topN,proto3" json:"topN,omitempty"`                 // 输出前排名数
	StrategyCode  uint64                 `protobuf:"varint,3,opt,name=strategyCode,proto3" json:"strategyCode,omitempty"` // 策略ID
	SecurityCode  string                 `protobuf:"bytes,4,opt,name=securityCode,proto3" json:"securityCode,omitempty"`  // 证券代码
	Date          string                 `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`                  // 日期
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BacktestRequest) Reset() {
	*x = BacktestRequest{}
	mi := &file_backtest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BacktestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BacktestRequest) ProtoMessage() {}

func (x *BacktestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backtest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BacktestRequest.ProtoReflect.Descriptor instead.
func (*BacktestRequest) Descriptor() ([]byte, []int) {
	return file_backtest_proto_rawDescGZIP(), []int{0}
}

func (x *BacktestRequest) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *BacktestRequest) GetTopN() int64 {
	if x != nil {
		return x.TopN
	}
	return 0
}

func (x *BacktestRequest) GetStrategyCode() uint64 {
	if x != nil {
		return x.StrategyCode
	}
	return 0
}

func (x *BacktestRequest) GetSecurityCode() string {
	if x != nil {
		return x.SecurityCode
	}
	return ""
}

func (x *BacktestRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type SingleSecurityCodeBacktestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StrategyCode  uint64                 `protobuf:"varint,1,opt,name=strategyCode,proto3" json:"strategyCode,omitempty"` // 策略ID
	SecurityCode  string                 `protobuf:"bytes,2,opt,name=securityCode,proto3" json:"securityCode,omitempty"`  // 证券代码
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`                  // 日期
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleSecurityCodeBacktestRequest) Reset() {
	*x = SingleSecurityCodeBacktestRequest{}
	mi := &file_backtest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleSecurityCodeBacktestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleSecurityCodeBacktestRequest) ProtoMessage() {}

func (x *SingleSecurityCodeBacktestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backtest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleSecurityCodeBacktestRequest.ProtoReflect.Descriptor instead.
func (*SingleSecurityCodeBacktestRequest) Descriptor() ([]byte, []int) {
	return file_backtest_proto_rawDescGZIP(), []int{1}
}

func (x *SingleSecurityCodeBacktestRequest) GetStrategyCode() uint64 {
	if x != nil {
		return x.StrategyCode
	}
	return 0
}

func (x *SingleSecurityCodeBacktestRequest) GetSecurityCode() string {
	if x != nil {
		return x.SecurityCode
	}
	return ""
}

func (x *SingleSecurityCodeBacktestRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type StrategyBacktestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          int64                  `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`                 // 统计天数
	TopN          int64                  `protobuf:"varint,2,opt,name=topN,proto3" json:"topN,omitempty"`                 // 输出前排名数
	StrategyCode  uint64                 `protobuf:"varint,3,opt,name=strategyCode,proto3" json:"strategyCode,omitempty"` // 策略ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrategyBacktestRequest) Reset() {
	*x = StrategyBacktestRequest{}
	mi := &file_backtest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrategyBacktestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyBacktestRequest) ProtoMessage() {}

func (x *StrategyBacktestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backtest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyBacktestRequest.ProtoReflect.Descriptor instead.
func (*StrategyBacktestRequest) Descriptor() ([]byte, []int) {
	return file_backtest_proto_rawDescGZIP(), []int{2}
}

func (x *StrategyBacktestRequest) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *StrategyBacktestRequest) GetTopN() int64 {
	if x != nil {
		return x.TopN
	}
	return 0
}

func (x *StrategyBacktestRequest) GetStrategyCode() uint64 {
	if x != nil {
		return x.StrategyCode
	}
	return 0
}

var File_backtest_proto protoreflect.FileDescriptor

var file_backtest_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x6f, 0x70, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x70,
	0x4e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x7f, 0x0a,
	0x21, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x65,
	0x0a, 0x17, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x74, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x6f, 0x70, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x70,
	0x4e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x74, 0x65,
	0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_backtest_proto_rawDescOnce sync.Once
	file_backtest_proto_rawDescData []byte
)

func file_backtest_proto_rawDescGZIP() []byte {
	file_backtest_proto_rawDescOnce.Do(func() {
		file_backtest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backtest_proto_rawDesc), len(file_backtest_proto_rawDesc)))
	})
	return file_backtest_proto_rawDescData
}

var file_backtest_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_backtest_proto_goTypes = []any{
	(*BacktestRequest)(nil),                   // 0: backtest.BacktestRequest
	(*SingleSecurityCodeBacktestRequest)(nil), // 1: backtest.SingleSecurityCodeBacktestRequest
	(*StrategyBacktestRequest)(nil),           // 2: backtest.StrategyBacktestRequest
}
var file_backtest_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_backtest_proto_init() }
func file_backtest_proto_init() {
	if File_backtest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backtest_proto_rawDesc), len(file_backtest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backtest_proto_goTypes,
		DependencyIndexes: file_backtest_proto_depIdxs,
		MessageInfos:      file_backtest_proto_msgTypes,
	}.Build()
	File_backtest_proto = out.File
	file_backtest_proto_goTypes = nil
	file_backtest_proto_depIdxs = nil
}
